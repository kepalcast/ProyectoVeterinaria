// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ClienteContext))]
    [Migration("20230615061841_AgregarRaza")]
    partial class AgregarRaza
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Models.Cliente", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCliente"));

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Medicamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("RazaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCaducidad")
                        .HasColumnType("datetime2");

                    b.HasKey("idCliente");

                    b.HasIndex("RazaID");

                    b.ToTable("clientes");

                    b.HasData(
                        new
                        {
                            idCliente = 1,
                            Empresa = "Pet-Max",
                            Medicamento = "Albendazol",
                            Name = "Pelusa",
                            Precio = 350.0,
                            RazaID = 0,
                            fechaCaducidad = new DateTime(2030, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            idCliente = 2,
                            Empresa = "Kron",
                            Medicamento = "Metronidazol",
                            Name = "Michi",
                            Precio = 500.0,
                            RazaID = 0,
                            fechaCaducidad = new DateTime(2028, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            idCliente = 3,
                            Empresa = "Boehringen",
                            Medicamento = "Clenbuteroll",
                            Name = "Kimba",
                            Precio = 700.0,
                            RazaID = 0,
                            fechaCaducidad = new DateTime(2032, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("API.Models.Raza", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("RazaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("raza");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RazaName = "Perro"
                        },
                        new
                        {
                            Id = 2,
                            RazaName = "Gato"
                        });
                });

            modelBuilder.Entity("API.Models.Cliente", b =>
                {
                    b.HasOne("API.Models.Raza", "Raza")
                        .WithMany()
                        .HasForeignKey("RazaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Raza");
                });
#pragma warning restore 612, 618
        }
    }
}
